{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getGoods","goods","sortType","isReversed","copyGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","classNames","onClick","hidden","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAS,YAAOH,GAmBtB,OAjBAG,EAAUC,MAAK,SAACC,EAAGC,GACjB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKT,EAASY,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAITR,GACFC,EAAUQ,UAGLR,G,SA9BJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAMe,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAAShB,EAASkB,MAAlD,mBAAOd,EAAP,KAAiBe,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYlB,IAAaJ,EAASU,WAGtCa,QAAS,kBAAMJ,EACbf,IAAaJ,EAASU,SAClBV,EAASkB,KACTlB,EAASU,WAXjB,iCAiBA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYlB,IAAaJ,EAASY,SAGtCW,QAAS,kBAAMJ,EACbf,IAAaJ,EAASY,OAClBZ,EAASkB,KACTlB,EAASY,SAXjB,4BAiBA,wBACES,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAajB,IAGjBkB,QAAS,kBAAMN,GAAeZ,IARhC,sBAaEA,GAAcD,IAAaJ,EAASkB,OACpC,wBACEG,KAAK,SACLD,UAAU,4BACVI,OAAQpB,IAAaJ,EAASkB,OAASb,EACvCkB,QAAS,WACPN,GAAc,GACdE,EAAYnB,EAASkB,OANzB,sBAcJ,6BACE,6BACGhB,EAASD,EAAiBG,EAAUC,GAAYoB,KAAI,SAAAC,GAAI,OACvD,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCxHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.66fe17ed.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const copyGoods = [...goods];\n\n  copyGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    copyGoods.reverse();\n  }\n\n  return copyGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortType(\n            sortType === SortType.ALPHABET\n              ? SortType.NONE\n              : SortType.ALPHABET,\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortType(\n            sortType === SortType.LENGTH\n              ? SortType.NONE\n              : SortType.LENGTH,\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            hidden={sortType === SortType.NONE && !isReversed}\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getGoods(goodsFromServer, sortType, isReversed).map(item => (\n            <li data-cy=\"Good\" key={item}>{item}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}